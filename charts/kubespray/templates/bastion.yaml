{{- $sshPubKey := "kubespray.sshpubkey" -}}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace "user1-kargo-sshpubkey") }}
{{- if $secret }}
{{- $sshPubKey = index $secret.data "sshpubkey" }}
{{- end -}}
apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: bastion-{{ include "kubespray.fullname" . }}
  labels:
    app: bastion
    kubevirt.io/os: linux
    vpc: {{ include "kubespray.fullname" . }}
    qubo.containercraft.io/project: "kubespray"
    {{- include "kubespray.labels" . | nindent 4 }}
spec:
  running: true
  dataVolumeTemplates:
  - metadata:
      name: bastion-volume-vda-root
      annotations:
        kubevirt.io/provisionOnNode: node1
      labels:
        app: kubespray
    spec:
      source:
        registry:
          url: "docker://{{ .Values.nodes.bastion.source.image }}:{{ .Values.nodes.bastion.source.tag }}"
          imagePullPolicy: {{ .Values.nodes.imagePullPolicy }}
      accessModes:
      - "{{ .Values.nodes.bastion.storage.vda.accessModes }}"
      capacity:
        storage: "{{ .Values.nodes.bastion.storage.vda.size }}"
      config:
        featureGates:
        - HonorWaitForFirstConsumer
      pvc:
        accessModes:
        - "{{ .Values.nodes.bastion.storage.vda.accessModes }}"
        resources:
          requests:
            storage: "{{ .Values.nodes.bastion.storage.vda.size }}"
        storageClassName: "{{ .Values.nodes.bastion.storage.vda.class }}"
      storageClassName: "{{ .Values.nodes.bastion.storage.vda.class }}"
      volumeMode: {{ .Values.nodes.bastion.storage.vda.volumeMode }}
      persistentVolumeReclaimPolicy: Delete
  template:
    spec:
      evictionStrategy: LiveMigrate
      nodeSelector:
        node-role.kubernetes.io/kubevirt: ""
      domain:
        clock:
          timer: {}
          utc: {}
        cpu:
          model: {{ .Values.nodes.bastion.cpu.model }}
          threads: {{ .Values.nodes.bastion.cpu.cores }}
          dedicatedCpuPlacement: false
          sockets: 1
          cores: 1
        resources:
          requests:
            memory: {{ .Values.nodes.bastion.memory }}
            devices.kubevirt.io/kvm: "1"
          limits:
            memory: {{ .Values.nodes.bastion.memory }}
        machine:
          type: "q35"
        devices:
          autoattachPodInterface: false
          autoattachSerialConsole: true
          autoattachGraphicsDevice: true
          networkInterfaceMultiqueue: true
          rng: {}
          disks:
          - name: bastion-disk-vda-root
            bootOrder: 1
            disk:
              bus: virtio
          - name: cloudinitdisk
            disk:
              bus: virtio
          interfaces:
          - name: enp1s0
            model: virtio
            bootOrder: 2
            bridge: {}
      hostname: bastion-{{ include "kubespray.fullname" . }}
      networks:
      - name: enp1s0
        multus:
          networkName: {{ include "kubespray.fullname" . }}.brvpc{{ .Values.network.host_interface }}.{{ .Values.network.vlan_id }}
      terminationGracePeriodSeconds: 0
      accessCredentials:
      - sshPublicKey:
          source:
            secret:
              secretName: {{ .Values.user.credentials.sshpubkeysecret }}
          propagationMethod:
            qemuGuestAgent:
              users:
              - "{{ .Values.user.name }}"
      volumes:
      - name: bastion-disk-vda-root
        dataVolume:
          name: bastion-volume-vda-root
      - name: cloudinitdisk
        cloudInitNoCloud:
          networkData: |
            version: 2
            ethernets:
              enp1s0:
                dhcp4: false
                dhcp6: false
                addresses:
                  - {{ .Values.network.bastion.ipv4 }}/{{ .Values.network.subnet_mask }}
                gateway4: {{ .Values.network.bastion.gateway }}
                nameservers:
                  addresses:
                  - {{ .Values.network.bastion.dns }}
                  search:
                  - {{ .Values.network.search }}
          userData: |
            #cloud-config
            ssh_pwauth: true
            chpasswd:
              list: |
                 {{ .Values.user.name }}:{{ .Values.user.credentials.password }}
              expire: False
            users:
              - name: {{ .Values.user.name }}
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                groups: sudo,xrdp,lxd,docker,ssl-cert
                shell: /bin/bash
            hostname: bastion-{{ include "kubespray.fullname" . }}
            growpart:
              mode: auto
              devices: ['/']
              ignore_growroot_disabled: true
            package_upgrade: true
            packages:
              - "jq"
              - "vim"
              - "xrdp"
              - "firefox"
              - "python3"
              - "docker.io"
              - "python3-pip"
              - "gnome-tweaks"
              - "apache2-utils"
              - "ubuntu-desktop"
              - "libvirt-clients"
            runcmd:
              - "lxd init --auto"
              - "mkdir -p /home/{{ .Values.user.name }}/.kube"
              - "chown -R {{ .Values.user.name }}:{{ .Values.user.name }} /home/{{ .Values.user.name }}"
              - "apt-get remove apport apport-gtk python3-apport python3-problem-report shim-signed apport-symptoms python3-systemd ansible -y --allow-remove-essential"
              - "apt-get autoremove -y"
              - "python3 -m pip install --upgrade pip ansible ansible-base cryptography jinja2 netaddr pbr jmespath ruamel.yaml ruamel.yaml.clib MarkupSafe"
              - "snap install kubectl --classic"
              - "snap install helm --classic"