apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: vyos-gateway-{{ include "kubespray.fullname" . }}
  labels:
    app: vyos
    kubevirt.io/os: linux
    vyos.io/release: "1.4-rolling"
    vpc: {{ include "kubespray.fullname" . }}
    qubo.containercraft.io/project: "kubespray"
    {{- include "kubespray.labels" . | nindent 4 }}
spec:
  running: true
  template:
    metadata:
      labels:
        app: vyos
        kubevirt.io/os: linux
        vyos.io/release: "1.4-rolling"
        vpc: {{ include "kubespray.fullname" . }}
        qubo.containercraft.io/project: "kubespray"
        {{- include "kubespray.labels" . | nindent 8 }}
    spec:
      nodeSelector:
        node-role.kubernetes.io/kubevirt: ""
      domain:
        cpu:
          model: {{ .Values.nodes.vyos.cpu.model }}
          threads: {{ .Values.nodes.vyos.cpu.cores }}
          dedicatedCpuPlacement: false
          sockets: 1
          cores: 1
        resources:
          requests:
            memory: {{ .Values.nodes.vyos.memory }}
            devices.kubevirt.io/kvm: "1"
          limits:
            memory: {{ .Values.nodes.vyos.memory }}
        machine:
          type: "q35"
        devices:
          autoattachPodInterface: false
          autoattachSerialConsole: true
          autoattachGraphicsDevice: false
          networkInterfaceMultiqueue: true
          rng: {}
          disks:
          - name: vyos-disk-vda-root
            disk:
              bus: virtio
          - name: cloudinitdisk
            cdrom:
              bus: sata
              readonly: true
          interfaces:
          - name: eth0
            model: virtio
            bridge: {}
          - name: eth1
            model: virtio
            bridge: {}
      networks:
      - name: eth0
        multus:
          networkName: {{ .Values.network.primary }}
      - name: eth1
        multus:
          networkName: {{ include "kubespray.fullname" . }}.brvpc{{ .Values.network.host_interface }}.{{ .Values.network.vlan_id }}
      terminationGracePeriodSeconds: 0
      accessCredentials:
      - sshPublicKey:
          source:
            secret:
              secretName: {{ .Values.user.credentials.sshpubkeysecret }}
          propagationMethod:
            qemuGuestAgent:
              users:
              - "{{ .Values.user.name }}"
      volumes:
      - name: vyos-disk-vda-root
        containerDisk:
          image: "{{ .Values.nodes.vyos.source.image }}:{{ .Values.nodes.vyos.source.tag }}"
          imagePullPolicy: {{ .Values.nodes.imagePullPolicy }}
      - name: cloudinitdisk
        cloudInitNoCloud:
          secretRef:
            name: vyos-cloudconfig